[SOUND] En esta conferencia vamos a crear una estructura básica de documentos HTML yendo directamente al editor y codificando uno nosotros mismos y luego la validaremos en el sitio web del validador w3c. Vale, así que estoy en Sublime Text y tengo un documento abierto un archivo llamado .-structure.before.html. Y se encuentra en los ejemplos, carpeta Lecture04. Así que tenemos una pizarra en blanco delante de nosotros y vamos a crear nuestra primera página HTML. Por lo tanto, cada página HTML debe comenzar con el tipo de documento o declaración de tipo de documento. Las palabras doc type o HTML podrían ser minúsculas o mayúsculas. Lo único que debes tener cuidado es que no debería haber espacio entre menos de signo de exclamación y la palabra tipo doc. Puedes tener tanto espacio como quieras en cualquier otro lugar, pero no se ve tan bien. Así que lo mantendremos en un espacio. En el pasado, estas declaraciones eran bastante complicadas de aspecto, ciertamente no mucha gente sería capaz de escribirlas sin copiar y pegar. Sin embargo, HTML 5 cambió todo eso. Ahora la declaración es tan simple como puede ser. Todo lo que hace es decirle al navegador que debe prepararse para renderizar HTML. Ahora sé lo que algunos de ustedes podrían estar pensando. ¿ Qué más habría si no HTML? No parece haber ningún propósito práctico para esta declaración. Si estás pensando eso, tienes toda la razón. Esta declaración es realmente histórica en gran parte. Cuando los estándares HTML se estaban popularizando por primera vez, la web estaba llena de páginas que no cumplían con los estándares. Para ayudar a los navegadores a representar esas páginas correctamente, los navegadores utilizaron la declaración doctype para distinguir entre páginas no conformes y compatibles. Las páginas no conformes se representaron en lo que se denomina el modo peculiaridades, y las páginas compatibles se representaron en lo que se denomina modo estándar. Ahora, eso es todo histórico. Pero lo que necesita saber hoy es que si deja fuera la declaración de página HTML, que le indicará al navegador que debe tratar sus páginas como una que no sigue el estándar HTML. No voy a entrar en lo que eso realmente significaría en la práctica, pero no hace falta decir que las cosas serían un poco estropeadas. Tu diseño no funcionaría del todo bien. Los estilos que aplique funcionarían un poco peculiares. Entonces, para hacer una historia corta siempre use la declaración simple doctype HTML5. A continuación, va la etiqueta html, y eso es básicamente una etiqueta que contiene todo el documento html. Después de la etiqueta html, va la etiqueta de cabeza. La etiqueta principal contiene elementos que describen el contenido principal de la página. Cosas como qué codificación de caracteres debería usar el navegador para el contenido principal. Puede contener la descripción de los autores de la página, el título de la página y cualquier otro recurso externo que se necesite para renderizar la página correctamente, entre otras cosas. El punto es que contiene algunos metadatos sobre el contenido principal. Vamos a escribir nuestro primer metatag para especificar el conjunto de caracteres en la codificación de nuestra página web. Aunque no es absolutamente necesario, siempre es una buena idea especificar el conjunto de caracteres que el navegador debe saber cómo interpretar el contenido de la página web. El juego de caracteres más utilizado es UTF 8. Tenga en cuenta también que la metaetiqueta es una etiqueta independiente. No hay metaetiqueta de cierre. A continuación, especificaremos el título de la página. El título es una de las etiquetas que en realidad se requiere para estar aquí. Sin él, el HTML no será válido. Después de la etiqueta de la cabeza va la etiqueta del cuerpo. La etiqueta de cuerpo es la raíz de todo el contenido que es visible para el usuario. A menudo se le conoce como una ventana gráfica. Ahora podemos escribir nuestro contenido. Vale, así que echemos un vistazo a cómo se ve esto en el navegador. Vale, y aquí está nuestra página. Veamos el contenido. Coursera es tan genial. Estoy aprendiendo mucho. Y se puede ver que el título, Coursera es Cool, también está ahí. A continuación, tratemos de tomar el código de nuestra página, y copiarlo y pegarlo para validarlo dentro del validador W3C. Y dice que somos válidos. Estoy seguro de que ya has notado que lo que estamos haciendo es anidar una etiqueta HTML en otra. Así, por ejemplo, podríamos decir que la etiqueta de cabeza contiene la etiqueta de título. Una regla importante al anidar etiquetas html es que debe cerrar la última etiqueta abierta antes de cerrar su etiqueta principal. Si no lo hace, el html que escribió no es válido. Así que, por ejemplo, aquí tengo un párrafo. Y no se preocupe por lo que significan estas etiquetas en este momento, pero la etiqueta de párrafo, p, se cierra antes de la última etiqueta abierta, span. Span está cerca después. Así que si copiamos y pegamos este código y lo colocamos dentro de nuestro validador y lo comprobamos, verá que se está quejando, y diciendo que, la etiqueta final p visto, pero había elementos abiertos. En otras palabras, quiere que cierres la etiqueta span, que se abrió por última vez, antes de cerrar la etiqueta exterior, p párrafo. Una nota más antes de seguir adelante. Cuando el navegador abre una página HTML. Siempre renderiza o interpreta el código HTML secuencialmente de arriba a abajo. Entonces, la declaración doctype se interpreta primero, luego la etiqueta HTML, luego la etiqueta de cabeza, y sigue y sigue hasta que llega a la última etiqueta HTML de cierre. Esto será importante para recordar a medida que avanzamos más en el curso. En resumen, repasamos el documento HTML mínimo desnudo más suma ponderada. Revisamos la declaración de la versión HTML. Y recuerde, siempre tenemos que usarlo, de lo contrario el navegador se pondrá en modo peculiaridades y algunas cosas se romperán. Nuestras primeras etiquetas HTML. Usamos html, meta, cabeza, título, cuerpo, y en realidad lanzamos algunas etiquetas de párrafo también. Revisamos el hecho de que el navegador representa el HTML secuencialmente, lo que significa de arriba a abajo. Y lo hace de arriba a abajo también. A continuación, vamos a hablar de modelos de contenido HTML.